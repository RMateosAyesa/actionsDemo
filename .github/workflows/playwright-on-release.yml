name: Run Playwright Tests on Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install AppImage & GUI dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 xvfb
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Start virtual display
        run: |
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 3

      - name: Download zipped AppImage from release
        run: |
          mkdir -p app
          URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.assets[] | select(.name == "DevaidStarter_Dev-4.1.1.AppImage.zip") | .browser_download_url')
          echo "Downloading from $URL"
          curl -L -o app/app.zip "$URL"
          unzip app/app.zip -d app/

      - name: Make AppImage executable
        run: chmod +x app/DevaidStarter_Dev-4.1.1.AppImage

      - name: Launch the AppImage
        run: |
          ./app/DevaidStarter_Dev-4.1.1.AppImage --no-sandbox > app/app.log 2>&1 &
          sleep 10

      - name: Check if AppImage started
        run: |
          echo "Checking if AppImage is running..."
          if ! pgrep -f "DevaidStarter_Dev-4.1.1.AppImage"; then
            echo "❌ AppImage did not start correctly"
            [ -f app/app.log ] && cat app/app.log
            exit 1
          fi
          echo "✅ AppImage is running"

      - name: Checkout test code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=html

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Upload AppImage log (always run)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appimage-log
          path: app/app.log
